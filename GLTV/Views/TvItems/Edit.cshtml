@using System.Globalization
@model GLTV.Models.TvItemEditViewModel

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

<h4>TvItem</h4>
<hr />
<div class="row">
    <form asp-action="Edit" id="editTvItemForm" method="post" enctype="multipart/form-data">
        <div class="col-md-4">
            <div asp-validation-summary="All" class="text-danger"></div>
            @Html.HiddenFor(model => model.TvItem.ID)
            <div class="form-group">
                <label asp-for="TvItem.Author" class="control-label"></label>
                <input asp-for="TvItem.Author" class="form-control" readonly />
            </div>
            <div class="form-group">
                <label asp-for="TvItem.TimeInserted" class="control-label"></label>
                <input asp-for="TvItem.TimeInserted" class="form-control" readonly />
            </div>
            <div class="form-group">
                <label asp-for="TvItem.Type" class="control-label"></label>
                <input asp-for="TvItem.Type" class="form-control" readonly />
            </div>
            <div class="form-group">
                <label asp-for="TvItem.Title" class="control-label"></label>
                <textarea asp-for="TvItem.Title" class="form-control nonresizable"></textarea>
                <span asp-validation-for="TvItem.Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TvItem.StartTime" class="control-label"></label>
                <div class='input-group date' id='startTimeInput'>
                    <input asp-for="TvItem.StartTime" class="form-control" />
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
                <span asp-validation-for="TvItem.StartTime" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TvItem.EndTime" class="control-label"></label>
                <div class='input-group date' id='endTimeInput'>
                    <input asp-for="TvItem.EndTime" class="form-control" />
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
                <span asp-validation-for="TvItem.EndTime" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TvItem.Duration" class="control-label"></label>
                @if (Model.TvItem.Type == TvItemType.Video)
                {
                    <input asp-for="TvItem.Duration" class="form-control" readonly />
                }
                else
                {
                    <input asp-for="TvItem.Duration" class="form-control" />
                }
                <span asp-validation-for="TvItem.Duration" class="text-danger"></span>
            </div>
            <div class="form-group" id="locationsGroup">
                <label asp-for="LocationCheckboxes" class="control-label"></label>
                <div class="checkbox">
                    <label>
                        <input asp-for="LocationCheckboxes.LocationKosice" class="location-checkbox" />
                        <span class="cr"><i class="cr-icon glyphicon glyphicon-ok"></i></span>
                        Kosice
                    </label>
                </div>
                <div class="checkbox">
                    <label>
                        <input asp-for="LocationCheckboxes.LocationBanskaBystrica" class="location-checkbox" />
                        <span class="cr"><i class="cr-icon glyphicon glyphicon-ok"></i></span>
                        Banska Bystrica
                    </label>
                </div>
                <div class="checkbox">
                    <label>
                        <input asp-for="LocationCheckboxes.LocationZilina" class="location-checkbox" />
                        <span class="cr"><i class="cr-icon glyphicon glyphicon-ok"></i></span>
                        Zilina
                    </label>
                </div>
                <span asp-validation-for="LocationCheckboxes" class="text-danger"></span>
            </div>
        </div>
        <div class="col-md-12">
            <div class="form-group">
                <input type="submit" value="Update" class="btn btn-default" />
            </div>
        </div>
    </form>
</div>
@if (Model.TvItem.Type != TvItemType.Video)
{
    <div id="blueimp-gallery" class="blueimp-gallery blueimp-gallery-controls">
        <div class="slides"></div>
        <h3 class="title"></h3>
        <a class="prev">‹</a>
        <a class="next">›</a>
        <a class="close">×</a>
        <a class="play-pause"></a>
        <ol class="indicator"></ol>
    </div>
    <div style="padding-top: 50px;" id="links">
        @{
            foreach (TvItemFile file in Model.TvItem.Files)
            {
                <a href="@file.Url" title="@file.FileName">
                    <img src="@file.Url" alt="@file.FileName" width="200">
                </a>
            }
        }

    </div>
    <script>
        document.getElementById('links').onclick = function (event) {
            event = event || window.event;
            var target = event.target || event.srcElement,
                link = target.src ? target.parentNode : target,
                options = { index: link, event: event },
                links = this.getElementsByTagName('a');
            blueimp.Gallery(links, options);
        };
    </script>
}
else
{
    foreach (TvItemFile file in Model.TvItem.Files)
    {
        <video width="640" height="480" controls>
            <source src="@file.Url" type="video/mp4">
            <source src="@file.Url" type="video/mkv">
            Your browser does not support the video tag.
        </video>
    }
}

<div style="padding-top: 50px;">
    <a asp-action="Index">Back to List</a>
</div>

<script type="text/javascript">

    $(function () {
        var startTimeDp = $('#startTimeInput').datetimepicker({
            locale: 'sk',
            useCurrent: false,
            //maxDate: new Date('@(Model.TvItem.EndTime.ToString("o", CultureInfo.InvariantCulture))')
        });
        var endTimeDp = $('#endTimeInput').datetimepicker({
            useCurrent: false, //Important! See issue #1075
            locale: 'sk',
            //minDate: new Date('@(Model.TvItem.StartTime.ToString("o", CultureInfo.InvariantCulture))')
        });
        startTimeDp.on("dp.change",
            function (e) {
                endTimeDp.data("DateTimePicker").minDate(e.date);
            });
        endTimeDp.on("dp.change",
            function (e) {
                startTimeDp.data("DateTimePicker").maxDate(e.date);
            });
        @*endTimeDp.data("DateTimePicker").minDate(new Date('@(Model.TvItem.StartTime.ToString("o", CultureInfo.InvariantCulture))'));
        startTimeDp.data("DateTimePicker").maxDate(new Date('@(Model.TvItem.EndTime.ToString("o", CultureInfo.InvariantCulture))'));*@

        $('input.location-checkbox').change(function () {
            validateLocationCheckboxes();
        });

        function validateLocationCheckboxes() {
            var checked = $('#locationsGroup').find('input[type=checkbox]:checked').length;
            var span = $('#locationsGroup').find('span.text-danger');

            if (checked == 0) {
                span.removeClass('field-validation-valid');
                span.addClass('field-validation-error');
                span.text('At least one location must be checked.');
                return false;
            } else {
                span.addClass('field-validation-valid');
                span.removeClass('field-validation-error');
                span.text('');
                return true;
            }
        }

        $('#editTvItemForm').submit(function (ev) {
            ev.preventDefault(); // to stop the form from submitting
            /* Validations go here */
            if (!validateLocationCheckboxes()) {
                return false;
            }

            this.submit(); // If all the validations succeeded
        });

    });
</script>

