@using GLTV.Extensions
@using GLTV.Models.Objects
@model GLTV.Models.ViewModels.ClientEventsViewModel

@{
    ViewData["Title"] = "Client Activity";
    ViewBag.ClientNav = true;
    Layout = "~/Views/Shared/_Layout.cshtml";
    string ALL_VALUE = "All";
    TvScreen selectedTvScreen = Model.ActiveTvScreens.FirstOrDefault();
}

<h2>Active Screens</h2>

<table class="table table-hover" id="tvScreensTable">
    <thead>
        <tr>
            <th>
                Source
            </th>
            <th>
                Description
            </th>
            <th>
                Last Ping
            </th>
            <th>
                Last 7 Days Stats
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (TvScreen screen in Model.ActiveTvScreens)
        {
            <tr data-id="tvscreen_@screen.ID" class="@(selectedTvScreen?.ID == screen.ID ? "selected" :"")">
                <td>
                    @Html.DisplayFor(modelItem => screen.IpAddress)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => screen.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => screen.LastHandshake) <br/>(@Utils.GetElapsedTime(screen.LastHandshake))
                </td>
                <td>
                    <p><label>Uptime: </label>&nbsp;@screen.GetLast7DaysUptimeFormatted()</p>
                    <p><label>Network Usage: </label>&nbsp;@Html.Raw(screen.GetTotalNetworkUsage7DaysFormatted())</p>
                </td>
            </tr>
        }
    </tbody>
</table>

@foreach (TvScreen screen in Model.ActiveTvScreens)
{
    <div id="tvscreen_@screen.ID" class="tv-detail @(selectedTvScreen?.ID == screen.ID ? "" :"hidden")">
        <h3>Log data for @Html.DisplayFor(modelItem => screen.IpAddress)</h3>

        <ul class="nav nav-tabs">
            <li class="active"><a data-toggle="tab" href="#uptimes_@screen.ID">Uptime Log</a></li>
            <li><a data-toggle="tab" href="#activity_@screen.ID">Activity Log</a></li>
        </ul>

        <div class="tab-content">
            <div id="uptimes_@screen.ID" class="tab-pane fade in active">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>
                                Start
                            </th>
                            <th>
                                End
                            </th>
                            <th>
                                Duration
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (TvScreenHandshake handshake in screen.ScreenHandshakes)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => handshake.FirstHandshake)
                                </td>
                                <td>
                                    @if (handshake.IsActive)
                                    {
                                        <text>Active</text>
                                    }
                                    else
                                    {
                                        @Html.DisplayFor(modelItem => handshake.LastHandshake)
                                    }
                                </td>
                                <td>
                                    @Utils.GetRemainingTime(handshake.FirstHandshake, handshake.LastHandshake)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div id="activity_@screen.ID" class="tab-pane fade">
                
                <h4>Last 200 requests</h4>
                <form class="form-inline" style="padding: 10px;">
                    <div class="form-group">
                        <label>Filter by type:</label>
                        @{
                            List<WebClientLogType> logTypes = screen.LastActivity.Select(x => x.Type).Distinct().ToList();
                        }
                        <select class="form-control typeDropdown">
                            <option value="All">@(ALL_VALUE)</option>
                            @{
                                foreach (WebClientLogType type in logTypes)
                                {
                                    <option value="@(type)">@type</option>
                                }
                            }
                        </select>
                    </div>
                </form>
                <table class="table table-striped table-hover activity-table">
                    <thead>
                    <tr>
                        <th>
                            Type
                        </th>
                        <th>
                            Time
                        </th>
                        <th>
                            Message
                        </th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var item in screen.LastActivity)
                    {
                        <tr>
                            <td class="type-col">
                                @Html.DisplayFor(modelItem => item.Type)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TimeInserted)
                            </td>
                            <td>
                                <p>@Html.Raw(item.GetFormattedMessage())</p>
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>

    </div>
}



<script>
    $(function() {
        var selectedType = $('.typeDropdown:visible').val();

        $('.typeDropdown').change(function () {
            selectedType = $(this).val();
            filterTable(selectedType);
        });

        $('#tvScreensTable tbody tr').on('click',function () {
            $('#tvScreensTable tbody tr').removeClass('selected');
            $(this).addClass('selected');
            var id = $(this).data().id;
            console.log('selected screen: ' + id);

            $('.tv-detail').addClass('hidden');
            $('#'+id).removeClass('hidden');
        });
    });

    function filterTable(selectedType) {
        $('.activity-table:visible > tbody > tr').each(function (index) {
            var currentType = $(this).find('td.type-col').text().trim();

            var typeOk = false;

            if (selectedType == "@(ALL_VALUE)") {
                typeOk = true;
            } else {
                if (currentType == selectedType) {
                    typeOk = true;
                } else {
                    typeOk = false;
                }
            }

            if (typeOk) {
                $(this).show();
            } else
            {
                $(this).hide();
            }
        });
    }
</script>
